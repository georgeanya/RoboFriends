{"version":3,"sources":["Card.js","Cardlist.js","SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Card","name","id","email","username","className","alt","src","width","height","CardList","robots","cardArray","map","user","i","SearchBox","searchField","SearchChange","type","placeholder","value","onChange","App","onSearchChange","event","setState","searchFeild","target","filter","state","toLowerCase","includes","filteredrobots","fetch","then","response","json","users","catch","err","console","log","this","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"yOAqBeA,EAnBF,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAC5B,OACI,sBAAKC,UAAU,uDAAf,UACI,qBAAKC,IAAI,OAAOC,IAAG,+BAA2BL,GAAMM,MAAM,QAAQC,OAAO,UACzE,gCACI,6BACKR,IAEL,mBAAGI,UAAU,IAAb,SACKD,IAEL,4BACKD,WCANO,EAXE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACVC,EAAYD,EAAOE,KAAI,SAACC,EAAMC,GACpC,OAAO,cAAC,EAAD,CAAMb,GAAIS,EAAOI,GAAGb,GAAID,KAAMU,EAAOI,GAAGd,KAAMG,SAAUO,EAAOI,GAAGX,SAAUD,MAAOQ,EAAOI,GAAGZ,WAEpG,OACI,8BACKS,KCOEI,EAdG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAC9B,OACI,qBAAKb,UAAU,MAAf,SACI,uBACAA,UAAU,mCACVc,KAAK,SACLC,YAAY,gBACZC,MAAOJ,EACPK,SAAUJ,OCqCPK,G,wDAzCX,aAAe,IAAD,8BACV,gBAiBJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOP,QAC1C,IAAMQ,EAAS,EAAKC,MAAMnB,OAAOkB,QAAO,SAAAlB,GAAM,OAAIA,EAAOV,KAAK8B,cAAcC,SAASP,EAAMG,OAAOP,MAAMU,kBACxG,EAAKL,SAAS,CAACO,eAAgBJ,KAnB/B,EAAKC,MAAQ,CACTnB,OAAQ,GACRsB,eAAgB,GAChBN,YAAa,IALP,E,qDASd,WAAqB,IAAD,OAChBO,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GACF,EAAKZ,SAAS,CAACf,OAAO,YAAK2B,GAAQL,eAAe,YAAKK,QAE1DC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,oBAQ9B,WAAU,IAAD,OACkBG,KAAKb,MAAMnB,OAAOkB,QAAO,SAAAlB,GAC5C,OAAOA,EAAOV,KAAK8B,cAAcC,SAAS,EAAKF,MAAMH,YAAYI,kBAErE,OAA0B,IAAtBY,KAAKb,MAAMc,OACJ,4CAGH,sBAAKvC,UAAU,KAAf,UACI,oBAAIA,UAAU,iBAAd,yBACA,cAAC,EAAD,CAAWa,aAAcyB,KAAKnB,iBAC9B,cAAC,EAAD,CAAUb,OAAQgC,KAAKb,MAAMG,wB,GAnC/BY,cCOHC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.6808f85e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, id, email, username}) => {\r\n    return (\r\n        <div className=' tc bg-light-green dib br3 pa3 ma2 bw2 shadow-5 grow'>\r\n            <img alt='robo' src= {`https://robohash.org/${id}`} width='200px' height='200px'/>\r\n            <div>\r\n                <h2>\r\n                    {name}\r\n                </h2>\r\n                <p className='b'>\r\n                    {username}\r\n                </p>\r\n                <p>\r\n                    {email}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react'\r\nimport Card from './Card'\r\n\r\nconst CardList = ({ robots }) => {\r\n    const cardArray = robots.map((user, i) => {\r\n    return <Card id={robots[i].id} name={robots[i].name} username={robots[i].username} email={robots[i].email}/>    \r\n    })\r\n    return (\r\n        <div>\r\n            {cardArray}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchField, SearchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n            className='pa3 ba b--green bg-lightest-blue'\r\n            type='search' \r\n            placeholder='search robots'\r\n            value={searchField}\r\n            onChange={SearchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React, { Component } from 'react';\r\nimport CardList from './Cardlist';\r\nimport SearchBox from './SearchBox';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            filteredrobots: [],\r\n            searchFeild: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=> response.json())\r\n        .then(users => {\r\n            this.setState({robots: [...users], filteredrobots: [...users]})\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchFeild: event.target.value })\r\n        const filter = this.state.robots.filter(robots => robots.name.toLowerCase().includes(event.target.value.toLowerCase()))\r\n        this.setState({filteredrobots: filter})\r\n    }\r\n    render() {\r\n        const filteredrobots = this.state.robots.filter(robots => {\r\n            return robots.name.toLowerCase().includes(this.state.searchFeild.toLowerCase());\r\n        });\r\n        if (this.state.length === 0) {\r\n            return <h2>Loading...</h2>\r\n        } else {\r\n            return (\r\n                <div className='tc'>\r\n                    <h1 className='sagafont f1 tt'>RoboFriends</h1>\r\n                    <SearchBox SearchChange={this.onSearchChange}/>\r\n                    <CardList robots={this.state.filteredrobots}/>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'tachyons';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <App/>\r\n, document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}